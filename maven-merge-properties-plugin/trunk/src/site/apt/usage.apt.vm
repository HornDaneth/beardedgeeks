  ------
  Usage
  ------
  hleinone
  ------
  20th September 20009
  ------

Usage

* Configure the plugin

  To configure the merged properties files you have to list them in the plugin
  configuration. Note that the order of <<<propertiesFile>>> entries matters,
  the properties of the ones listed below are being overridden by the
  properties from the ones above.
  
+---+
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>org.beardedgeeks</groupId>
        <artifactId>maven-merge-properties-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <merges>
            <merge>
              <targetFile>${build.outputDirectory}/application.properties</targetFile>
              <propertiesFiles>
                <propertiesFile>src/main/config/${user.name}/application.properties</propertiesFile>
                <propertiesFile>src/main/config/default/application.properties</propertiesFile>
              </propertiesFiles>
            </merge>
          </merges>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>merge</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  ...
</project>
+---+ 

  The example configuration above merges user-specific application properties
  with a default one so that if a property exists in both properties files, the
  one in the user-specific file is used over the in the default properties
  file. The merged properties file is then moved to the project output
  directory. Also the plugin execution is bound to compile phase so that it
  runs automatically on each compilation.